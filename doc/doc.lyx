#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\date{}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 3cm
\rightmargin 2.5cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Trabalho Prático 2 - Ligador
\end_layout

\begin_layout Date
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fernanda de Oliveira Ramalho
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gustavo Henrique Oliveira Costa
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gabriel Henrique Souto Pires
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Raydan Elias Gaspar
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Introdução
\end_layout

\begin_layout Standard
No primeiro trabalho prático foi implementado um montador para a máquina
 Swombat que basicamente traduzia um programa em assembly para linguagem
 de máquina.
 Mas o montador conseguia apenas traduzir programas constituídos de apenas
 um arquivo, programas modulares não funcionariam no montador antigo.
 Para resolver esse problema, nesse trabalho foi implementado um 
\emph on
ligador
\emph default
 que faz o trabalho de unir os vários módulos que o montador traduz separadament
e.
 Para conseguir ligar os módulos, o montador fornece ao ligador informações
 adicionais sobre cada módulo como a lista de símbolos contidos no módulo,
 o tamanho do módulo, e qualquer outra informação que ajude a realocar os
 endereços de memória usados em cada módulo, além do código binário do programa
 montado.
\end_layout

\begin_layout Section
Desenvolvimento
\end_layout

\begin_layout Subsection
Montador
\end_layout

\begin_layout Standard
O primeiro passo para desenvolver o ligador foi adaptar o montador do primeiro
 trabalho para fornecer informações necessárias para unir os módulos.
 Essa adaptação é necessária, uma vez que sem ela cada módulo de um programa
 seria montado como um programa independente e teríamos problemas caso um
 módulo tentasse usar uma função que é declarada em outro módulo, já que
 o endereço dessa função não seria conhecido.
\end_layout

\begin_layout Standard
A primeira parte do módulo é constituída pelas informações que o ligador
 usará para vincular os módulos.
 Cada módulo começa com a string 
\begin_inset Quotes eld
\end_inset

MODULE_START
\begin_inset Quotes erd
\end_inset

 que é usada na hora da ligação para separar o início de cada módulo.
 Depois temos o nome do arquivo onde o módulo está contido (apenas para
 fins de debug, esse nome não é usado no ligador) e o tamanho do módulo
 que é usado mais tarde para atualizar a constante de relocação.
 Depois todas as 
\emph on
Labels
\emph default
 e constantes do módulo são declaradas acompanhadas pelo seu endereço na
 memória e o endereço de todas as instruções que utilizam a label.
 Logo abaixo das labels temos uma lista com todos os 
\emph on
.extern
\emph default
 do módulo seguindo o mesmo padrão.
 As listas de 
\emph on
Labels
\emph default
 e 
\emph on
Externs
\emph default
 são delimitadas pelas strings 
\begin_inset Quotes eld
\end_inset

END_LABELS
\begin_inset Quotes erd
\end_inset

 e 
\begin_inset Quotes eld
\end_inset

END_EXTERNS
\begin_inset Quotes erd
\end_inset

 respectivamente.
\end_layout

\begin_layout Standard
Na segunda parte do módulo temos o código binário já devidamente traduzido.
 O final do módulo é marcado pela string 
\begin_inset Quotes eld
\end_inset

MODULE_END
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsection
Ligador
\end_layout

\begin_layout Standard
Ao receber os módulos gerados pelo montador, o ligador primeiro lê todos
 os arquivos de entrada e concatena todos em um arquivo temporário chamado
 
\begin_inset Quotes eld
\end_inset

ligacao.temp
\begin_inset Quotes erd
\end_inset

 que serve de guia para o resto do programa.
 Depois o ligador basicamente desfaz todo o trabalho do montador ao ler
 todas as 
\emph on
labels 
\emph default
e
\emph on
 externs
\emph default
 de todos os módulos e colocá-los em uma lista.
 Nesta estapa o ligador também escreve no vetor de memória o código binário
 traduzido pelo montador.
 Caso exista alguma label repetida (duas labels listadas com o mesmo nome),
 elas são juntadas em uma só por motivos de organização.
\end_layout

\begin_layout Standard
Depois cada extern é localizado na lista de labels para que seu endereço
 seja alterado e se possa fazer a devida alteração na memória posteriormente.
\end_layout

\begin_layout Standard
Com todos os externs localizados e cada label com seus respectivos endereços
 de memória, os valores de memória escritos pelo montador são recalculados
 para que todos os módulos funcionem como um programa só.
\end_layout

\begin_layout Section
Programas testados
\end_layout

\begin_layout Section
Testes e simulações
\end_layout

\begin_layout Section
Conclusão
\end_layout

\end_body
\end_document
